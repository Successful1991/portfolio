"use strict";THREE.MTLLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(t,a,r,e){var s=this,i=new THREE.FileLoader(this.manager);i.setPath(this.path),i.load(t,function(t){a(s.parse(t))},r,e)},setPath:function(t){return this.path=t,this},setTexturePath:function(t){return this.texturePath=t,this},setBaseUrl:function(t){return console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead."),this.setTexturePath(t)},setCrossOrigin:function(t){return this.crossOrigin=t,this},setMaterialOptions:function(t){return this.materialOptions=t,this},parse:function(t){for(var a=t.split("\n"),r={},e=/\s+/,s={},i=0;i<a.length;i++){var o=a[i];if(0!==(o=o.trim()).length&&"#"!==o.charAt(0)){var n=o.indexOf(" "),h=0<=n?o.substring(0,n):o;h=h.toLowerCase();var p=0<=n?o.substring(n+1):"";if(p=p.trim(),"newmtl"===h)r={name:p},s[p]=r;else if(r)if("ka"===h||"kd"===h||"ks"===h){var l=p.split(e,3);r[h]=[parseFloat(l[0]),parseFloat(l[1]),parseFloat(l[2])]}else r[h]=p}}var c=new THREE.MTLLoader.MaterialCreator(this.texturePath||this.path,this.materialOptions);return c.setCrossOrigin(this.crossOrigin),c.setManager(this.manager),c.setMaterials(s),c}},THREE.MTLLoader.MaterialCreator=function(t,a){this.baseUrl=t||"",this.options=a,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:"Anonymous",setCrossOrigin:function(t){this.crossOrigin=t},setManager:function(t){this.manager=t},setMaterials:function(t){this.materialsInfo=this.convert(t),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(t){if(!this.options)return t;var a={};for(var r in t){var e=t[r],s={};for(var i in a[r]=s,e){var o=!0,n=e[i],h=i.toLowerCase();switch(h){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(n=[n[0]/255,n[1]/255,n[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===n[0]&&0===n[1]&&0===n[2]&&(o=!1)}o&&(s[h]=n)}}return a},preload:function(){for(var t in this.materialsInfo)this.create(t)},getIndex:function(t){return this.nameLookup[t]},getAsArray:function(){var t=0;for(var a in this.materialsInfo)this.materialsArray[t]=this.create(a),this.nameLookup[a]=t,t++;return this.materialsArray},create:function(t){return void 0===this.materials[t]&&this.createMaterial_(t),this.materials[t]},createMaterial_:function(t){var o=this,a=this.materialsInfo[t],n={name:t,side:this.side};function r(t,a){if(!n[t]){var r,e,s=o.getTextureParams(a,n),i=o.loadTexture((r=o.baseUrl,"string"!=typeof(e=s.url)||""===e?"":/^https?:\/\//i.test(e)?e:r+e));i.repeat.copy(s.scale),i.offset.copy(s.offset),i.wrapS=o.wrap,i.wrapT=o.wrap,n[t]=i}}for(var e in a){var s,i=a[e];if(""!==i)switch(e.toLowerCase()){case"kd":n.color=(new THREE.Color).fromArray(i);break;case"ks":n.specular=(new THREE.Color).fromArray(i);break;case"map_kd":r("map",i);break;case"map_ks":r("specularMap",i);break;case"norm":r("normalMap",i);break;case"map_bump":case"bump":r("bumpMap",i);break;case"ns":n.shininess=parseFloat(i);break;case"d":(s=parseFloat(i))<1&&(n.opacity=s,n.transparent=!0);break;case"tr":s=parseFloat(i),this.options&&this.options.invertTrProperty&&(s=1-s),0<s&&(n.opacity=1-s,n.transparent=!0)}}return this.materials[t]=new THREE.MeshPhongMaterial(n),this.materials[t]},getTextureParams:function(t,a){var r,e={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)},s=t.split(/\s+/);return 0<=(r=s.indexOf("-bm"))&&(a.bumpScale=parseFloat(s[r+1]),s.splice(r,2)),0<=(r=s.indexOf("-s"))&&(e.scale.set(parseFloat(s[r+1]),parseFloat(s[r+2])),s.splice(r,4)),0<=(r=s.indexOf("-o"))&&(e.offset.set(parseFloat(s[r+1]),parseFloat(s[r+2])),s.splice(r,4)),e.url=s.join(" ").trim(),e},loadTexture:function(t,a,r,e,s){var i,o=THREE.Loader.Handlers.get(t),n=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager;return null===o&&(o=new THREE.TextureLoader(n)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin),i=o.load(t,r,e,s),void 0!==a&&(i.mapping=a),i}};